/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-21 00:17:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.layout;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import data.dao.MemberDao;
import data.dao.ItemDao;

public final class title2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("data.dao.MemberDao");
    _jspx_imports_classes.add("data.dao.ItemDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link\r\n");
      out.write("	href=\"https://fonts.googleapis.com/css2?family=Anton&family=Edu+VIC+WA+NT+Beginner:wght@600&family=Gamja+Flower&family=Single+Day&family=Jua&family=Nanum+Pen+Script&display=swap\"\r\n");
      out.write("	rel=\"stylesheet\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.3.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("	src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	.title2{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.title2_container{\r\n");
      out.write("		width: 1200px;\r\n");
      out.write("		margin-left: 15%;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	.header-login{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		margin-right: 10px;\r\n");
      out.write("		text-align: right;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.search-wrap{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-wrap: nowrap;\r\n");
      out.write("		justify-content: center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.search-wrap form{\r\n");
      out.write("		width: 70%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.header-search{\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-wrap: nowrap;\r\n");
      out.write("		width: 70%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.logo{\r\n");
      out.write("		width: 200px;\r\n");
      out.write("		min-width: 200px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.logo>img{\r\n");
      out.write("		width: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.search{\r\n");
      out.write("		border: 2px solid #4B62D3;\r\n");
      out.write("		border-radius: 5px;\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-wrap: nowrap;\r\n");
      out.write("		width: 80%;\r\n");
      out.write("		height: 80%;\r\n");
      out.write("		margin: 7px 0px 0px 20px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.search>input{\r\n");
      out.write("		width: 70%;\r\n");
      out.write("		border: 0px solid gray;\r\n");
      out.write("		padding: 10px;\r\n");
      out.write("		font-size: 10pt;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.search>input:focus {\r\n");
      out.write("		outline: none;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.icon-wrap{\r\n");
      out.write("		display: flex;\r\n");
      out.write("		flex-wrap: nowrap;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	.icon-wrap img{\r\n");
      out.write("		width: 30px;\r\n");
      out.write("		height: 30px;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");

 //프로젝트 경로구하기
 String root=request.getContextPath();

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<div class=\"title2\">\r\n");
      out.write("<div class=\"title2_container\">\r\n");
      out.write("\r\n");
      out.write("	<div class=\"header-login\">\r\n");
      out.write("\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-primary btn-link\" onclick=\"#\">회원가입</button>\r\n");
      out.write("	");

     //로그인세션얻기
     String loginok=(String)session.getAttribute("loginok");
     //아이디얻기
     String myid=(String)session.getAttribute("myid");
     MemberDao dao=new MemberDao();
     String name=dao.getName(myid);
     
     if(loginok==null){
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-primary btn-link\"\r\n");
      out.write("				onclick=\"location.href='index.jsp?main=login/loginmain.jsp'\">로그인</button>\r\n");
      out.write("			");
}else{
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<b style=\"font-size: 12pt;\">");
      out.print(name );
      out.write("님 로그인중...</b>\r\n");
      out.write("			<!-- 로그아웃 잘못되면 수정할 곳 -->\r\n");
      out.write("			<button type=\"button\" class=\"btn btn-primary btn-link\"\r\n");
      out.write("				onclick=\"location.href='login/logoutaction.jsp?id=");
      out.print(myid);
      out.write("'\">로그아웃</button>\r\n");
      out.write("			");
}
   	
      out.write("\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("<div class=\"search-wrap\">\r\n");
      out.write("	<div class=\"header-search\">\r\n");
      out.write("		<a class=\"logo\" onclick=\"location.href='index.jsp'\"> <img alt=\"\" src=\"image/uselogo.png\"></a>\r\n");
      out.write("		<form action=\"search/searchItem.jsp\" method=\"post\" name=\"search\">\r\n");
      out.write("			<div class=\"search\">\r\n");
      out.write("				<input type=\"text\" placeholder=\"검색어 입력\" name=\"searchText\">\r\n");
      out.write("				<button type=\"submit\" style=\"border: 0px; background-color: white;\">\r\n");
      out.write("					<img src=\"image/searchicon.png\" style=\"width: 10%; margin-right: 10px;\" align=\"right\">\r\n");
      out.write("				</button>\r\n");
      out.write("			</div>\r\n");
      out.write("		</form>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"icon-wrap\">\r\n");
      out.write("\r\n");
      out.write("			<img class=\"heart\" alt=\"\" src=\"image/heart.png\"\r\n");
      out.write("				onclick=\"#\" style=\"margin-top: 10px; margin-right: 10px;\">\r\n");
      out.write("\r\n");
      out.write("			<!-- 카트 -->\r\n");
      out.write("			<div class=\"cart\">\r\n");
      out.write("				");

     		ItemDao sdao=new ItemDao();
    		/*  int cartSize=sdao.getCartList(myid).size(); */
     		
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<img alt=\"장바구니 \" src=\"image/cartlogo.png\"\r\n");
      out.write("					onclick=\"#\">\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
