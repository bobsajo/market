/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-03-20 09:24:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.review;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import data.dto.ReviewDto;
import java.text.SimpleDateFormat;
import data.dao.ReviewDao;
import data.dao.MemberDao;
import data.dao.ItemDao;

public final class reviewOrderByLike_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("data.dao.MemberDao");
    _jspx_imports_classes.add("data.dao.ReviewDao");
    _jspx_imports_classes.add("data.dto.ReviewDto");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("data.dao.ItemDao");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    request.setCharacterEncoding("utf-8");
    response.setCharacterEncoding("utf-8");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>\n");
      out.write("    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n");
      out.write("    <link rel=\"stylesheet\" href=\"review.css\">\n");
      out.write("    <title>orderByLike</title>\n");
      out.write("    ");

        //로그인 상태와 아이디 불러오기
        String loginok=(String)session.getAttribute("loginok");
        String myid=(String)session.getAttribute("myid");
        System.out.println(loginok+" "+myid);

        //dao 선언
        ReviewDao db=new ReviewDao();
        MemberDao mdao=new MemberDao();
        ItemDao idao=new ItemDao();


        //상품 들어갈 때 item_num 받아서 들어오기
        String item_num=request.getParameter("item_num");
        //id로 member_num 받아오기
        String member_num=mdao.getMemberNum(myid);

//--------페이징 처리 기법 복사 시작----
        int totalCount;
        int totalPage; //총 페이지 수
        int startPage; //각 블럭의 시작 페이지
        int endPage; //각 블럭의 끝 페이지(예:1~10 다음의 1~10 부분)
        int start; //각 페이지의 시작 번호
        int perPage=7; //한 페이지에 보여질 글의 갯수
        int perBlock=5; //한 블럭 당 보여지는 페이지 갯수(밑에 뜨는 1~10, 다음 이 부분)
        int currentPage; //현재 페이지

        //총 갯수
        totalCount=db.getTotalCount(item_num);

        //현재 페이지에 글이 하나도 없어도 블럭을 1페이지로 두겠다, 페이지 있으면 그 페이지로 나타냄
        //현재 페이지번호 읽기(단 null일 때는 1페이지로 설정)
        if(request.getParameter("currentPage")==null)
            currentPage=1;
        else
            currentPage=Integer.parseInt(request.getParameter("currentPage"));

        //총 페이지 갯수
        totalPage=totalCount/perPage+(totalCount%perPage==0?0:1);

        //각 블럭의 시작 페이지...현재 페이지가 3(startPage:1, endPage:5)  6(s:6 e:10)
        startPage=(currentPage-1)/perBlock*perBlock+1;
        endPage=startPage+perBlock-1;

        //총페이지가 8, (6~10...endpage를 8로 수정해주어야 한다)
        //10까지 설정해 놨으나 총 페이지가 8이라면 마지막 페이지를 8로 수정해줘야 한다
        if(endPage>totalPage)
            endPage=totalPage;

        //각 페이지에서 불러 올 시작번호
        //현재 페이지가 2라면 startPage는 6이 됨(한 페이지에 5개 들어가니까)
        start=(currentPage-1)*perPage;

        //각 페이지에서 필요한 게시글 가져오기
        List<ReviewDto> list;
        list=db.getListLike(item_num,start,perPage);
//        System.out.println(member_num);
//        System.out.println(item_num);

        List<String> reviewArr=db.selectReviewNum(member_num,item_num);
//        System.out.println(reviewArr);
    
      out.write("\n");
      out.write("    <script type=\"text/javascript\">\n");
      out.write("        var member_num=");
      out.print(member_num);
      out.write(";\n");
      out.write("        var item_num=");
      out.print(item_num);
      out.write("\n");
      out.write("            $(document).ready(function(){\n");
      out.write("                ");

                    for(String arr:reviewArr) { 
      out.write("\n");
      out.write("                    //arr가 선언이 안되어 있어서 그랬다. reviewArr를 넣어주자\n");
      out.write("                    $.each($(\".likeBtn\"),function(idx, item) {\n");
      out.write("                        var reviewNum=$(item).attr(\"review_num\");\n");
      out.write("                        if(reviewNum==");
      out.print(arr);
      out.write(") { //만약 review_num과 arr에 저장된 review_num이 같다면\n");
      out.write("                       //      console.log(reviewNum);\n");
      out.write("                            $(item).addClass(\"likeBtnActive\");\n");
      out.write("                       }\n");
      out.write("                    });\n");
      out.write("                ");
 }
            
      out.write("\n");
      out.write("        });\n");
      out.write("    </script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("    ");

        SimpleDateFormat input=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        SimpleDateFormat output=new SimpleDateFormat("yyyy-MM-dd");
    
      out.write("\n");
      out.write("    <div id=\"orderByLike\"> <!--리뷰 컨텐츠 나오는 칸-->\n");
      out.write("        ");

            //boolean like=false;
            for(int i=0; i<list.size(); i++) {
                String reviewDate=list.get(i).getReview_date();
                Date newdt = input.parse(reviewDate);			//date 자료형으로 변환
                String newdt2 = output.format(newdt);	//date 타입을 string 으로 변환

        
      out.write("\n");
      out.write("        <div class=\"eachReview\"> <!--개개인 리뷰 칸 나오는 곳-->\n");
      out.write("            <div class=\"reviewSideBar\">\n");
      out.write("                ");

                    if((i+1)<4) { 
      out.write("\n");
      out.write("                <span class=\"bestReview\">베스트</span>\n");
      out.write("                ");
 } else { 
      out.write("\n");
      out.write("                <span class=\"bin\"></span>\n");
      out.write("                ");
 } 
      out.write("\n");
      out.write("                <span>");
      out.print(mdao.getReviewName(list.get(i).getMember_num()));
      out.write("</span>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"reviewContent\">\n");
      out.write("                <article>\n");
      out.write("                    <span class=\"reviewItemName\">");
      out.print(idao.getItemName(list.get(i).getItem_num()));
      out.write("</span>\n");
      out.write("                    <br><br>\n");
      out.write("                    <p>");
      out.print(list.get(i).getReview_content().replaceAll(" ", "&nbsp;").replaceAll("<", "&lt;")
                            .replaceAll(">", "&gt;").replaceAll("\n", "<br>"));
      out.write("</p>\n");
      out.write("                    <br>\n");
      out.write("                    ");

                        if(list.get(i).getReview_img()!=null) { 
      out.write("\n");
      out.write("                            <img class=\"reviewFlexImg\" review_num=\"");
      out.print(list.get(i).getReview_num());
      out.write("\" src=\"../reviewImg/");
      out.print(list.get(i).getReview_img());
      out.write("\" data-toggle=\"modal\" data-target=\"#exampleModalLong\">\n");
      out.write("                    <br><br>\n");
      out.write("                      ");
  } 
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("                    <span class=\"reviewDate\">");
      out.print(newdt2);
      out.write("</span>\n");
      out.write("                    <button type=\"button\" class=\"likeBtn\" review_num=\"");
      out.print(list.get(i).getReview_num());
      out.write("\" item_num=\"");
      out.print(list.get(i).getItem_num());
      out.write("\" member_num=\"");
      out.print(list.get(i).getMember_num());
      out.write("\"><span class=\"likeSpan glyphicon glyphicon-thumbs-up\">\n");
      out.write("            </span>&ensp;도움돼요&ensp;");
      out.print(list.get(i).getReview_like());
      out.write("</button>\n");
      out.write("                </article>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <hr style=\"width: 1000px; height: 10px;\" align=\"left\">\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            // like=false;\n");
      out.write("            //도움돼요 버튼을 클릭하면\n");
      out.write("            $(\"button.likeBtn\").click(function() {\n");
      out.write("                ");

                    if(loginok==null) { 
      out.write("\n");
      out.write("                        var goLogin=confirm(\"회원 전용 서비스입니다. 로그인 페이지로 이동하시겠습니까?\");\n");
      out.write("                        if(goLogin) {\n");
      out.write("                        //로그인 페이지로 이동하기\n");
      out.write("                        window.parent.parent.location.href=\"../login/loginForm.jsp?item_num=");
      out.print(item_num);
      out.write("\";\n");
      out.write("                }\n");
      out.write("                ");
 } else {
                
      out.write("\n");
      out.write("                //클래스 체크용\n");
      out.write("                // var check=$(this).hasClass(\"likeBtnActive\");\n");
      out.write("                // console.log(check);\n");
      out.write("\n");
      out.write("                review_num=$(this).attr(\"review_num\");\n");
      out.write("                if($(this).hasClass(\"likeBtnActive\")===true) {\n");
      out.write("                    // review_num=$(this).attr(\"review_num\");\n");
      out.write("                    // console.log(review_num);\n");
      out.write("                    item_num=$(this).attr(\"item_num\");\n");
      out.write("                    var tag=$(this);\n");
      out.write("\n");
      out.write("                    $.ajax({\n");
      out.write("                        type:\"get\",\n");
      out.write("                        dataType:\"json\",\n");
      out.write("                        url:\"reviewLikeDelete.jsp\",\n");
      out.write("                        data:{\"review_num\":review_num,\"item_num\":item_num,\"member_num\":member_num},\n");
      out.write("                        success:function(res) {\n");
      out.write("                            tag.html(\"<span class='likeSpan glyphicon glyphicon-thumbs-up'></span> 도움돼요&ensp;\"+res.review_like);\n");
      out.write("                            tag.removeClass(\"likeBtnActive\");\n");
      out.write("                        },statusCode:{\n");
      out.write("                            404:function() {\n");
      out.write("                                alert(\"json 파일이 없어요\");\n");
      out.write("                            },\n");
      out.write("                            500:function() {\n");
      out.write("                                alert(\"서버 오류... 코드를 다시 한 번 확인하세요\");\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("\n");
      out.write("                } else {\n");
      out.write("                    var tag=$(this);\n");
      out.write("                    $.ajax({\n");
      out.write("                        type:\"get\",\n");
      out.write("                        dataType:\"json\",\n");
      out.write("                        url:\"reviewLike.jsp\",\n");
      out.write("                        data:{\"review_num\":review_num,\"item_num\":item_num,\"member_num\":member_num},\n");
      out.write("                        success:function(res) {\n");
      out.write("                            tag.html(\"<span class='likeSpan glyphicon glyphicon-thumbs-up'></span> 도움돼요 \"+res.review_like);\n");
      out.write("                            tag.addClass(\"likeBtnActive\");\n");
      out.write("                            // location.reload();\n");
      out.write("                            // location.href=\"reviewList.jsp?item_num=\"+item_num+\"review_num=\"+review_num;\n");
      out.write("                        },statusCode:{\n");
      out.write("                            404:function() {\n");
      out.write("                                alert(\"json 파일이 없어요\");\n");
      out.write("                            },\n");
      out.write("                            500:function() {\n");
      out.write("                                alert(\"서버 오류... 코드를 다시 한 번 확인하세요\");\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("                ");
 }
            
      out.write("\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("        ");
      out.write("\n");
      out.write("        <div class=\"pagination1\">\n");
      out.write("            ");

                //블록 이전 버튼
                if(startPage>1) { 
      out.write("\n");
      out.write("            <a href=\"reviewList.jsp?currentPage=");
      out.print(startPage-1);
      out.write("\" class=\"p-left\">&laquo;</a>\n");
      out.write("            ");
 }

                //밑에 블럭 설정
                for(int pp=startPage; pp<=endPage; pp++) {
                    if(pp==currentPage) { 
      out.write("\n");
      out.write("            <a href=\"reviewList.jsp?currentPage=");
      out.print(pp);
      out.write("\" class=\"active\">");
      out.print(pp);
      out.write("</a>\n");
      out.write("            ");
 } else { 
      out.write("\n");
      out.write("            <a href=\"reviewList.jsp?currentPage=");
      out.print(pp);
      out.write('"');
      out.write('>');
      out.print(pp);
      out.write("</a>\n");
      out.write("            ");
 }
            }

                //블록 다음 버튼
                if(endPage<totalPage) { 
      out.write("\n");
      out.write("            <a href=\"reviewList.jsp?currentPage=");
      out.print(endPage+1);
      out.write("\">&raquo;</a>\n");
      out.write("            ");
 }
            
      out.write("\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("        <!-- Modal -->\n");
      out.write("        <div class=\"modal fade bd-example-modal-lg modal-dialog-scrollable\" id=\"exampleModalLong\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLongTitle\" aria-hidden=\"true\">\n");
      out.write("            <div class=\"modal-dialog modal-lg modal-lg-h\" modal-dialog-scrollable role=\"document\">\n");
      out.write("                <div class=\"modal-content\" style=\"padding: 10px 10px;\">\n");
      out.write("                    <div class=\"modal-header\">\n");
      out.write("                        <span class=\"modal-title\" id=\"exampleModalLongTitle\" style=\"white-space:nowrap; font-size: 17pt; font-weight: bold\">사진 후기</span>\n");
      out.write("                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" style=\"white-space:nowrap;\">\n");
      out.write("                            <span aria-hidden=\"true\" style=\"font-size: 25pt; white-space:nowrap;\">&times;</span>\n");
      out.write("                        </button>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"modal-body modal-lg-h\" style=\"float: left;\">\n");
      out.write("                        <div class=\"modal-img\"></div>\n");
      out.write("                        <script type=\"text/javascript\">\n");
      out.write("                            $(\".reviewFlexImg\").click(function() {\n");
      out.write("                                var modal_num=$(this).attr(\"review_num\");\n");
      out.write("                                // console.log(modal_num);\n");
      out.write("\n");
      out.write("                                $.ajax({\n");
      out.write("                                    url:\"getDataModal.jsp\",\n");
      out.write("                                    type:\"get\",\n");
      out.write("                                    dataType:\"json\",\n");
      out.write("                                    data:{\"review_num\":modal_num},\n");
      out.write("                                    success:function(res) {\n");
      out.write("                                        // alert(modal_num);\n");
      out.write("\n");
      out.write("                                        var item_name=res.item_name;\n");
      out.write("                                        var review_content=res.review_content;\n");
      out.write("                                        var review_date=res.review_date;\n");
      out.write("                                        // new Date(review_date);\n");
      out.write("\n");
      out.write("                                            $(\".modal-img\").html(\"<img src='../reviewImg/\"+res.review_img+\"' style='width: 300px; height: 400px; border-radius: 10px; float: left; margin-right: 20px; margin-top: 20px; margin-bottom: 30px;'>\");\n");
      out.write("                                            $(\".modal-text\").html(\"<span style='font-weight: bold'>\"+res.member_name+\"</span><br><span style='font-size: 9pt; color: gray;'><b>\"+item_name+\"</b></span><br><br><span>\"+review_content+\"</span><br><br><span style='color: gray'>\"+review_date+\"</span>\");\n");
      out.write("                                    }\n");
      out.write("                                });\n");
      out.write("                            });\n");
      out.write("                        </script>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"modal-text modal-lg-h\"></div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("</html>\n");
      out.write("    ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
